{"version":3,"sources":["server.js","redux/actions/notification.js","pages/Login.js","components/TaskItem.js","redux/actions/todo.js","components/TaskList.js","pages/Home.js","components/Navigaion.js","components/Notification.js","redux/reducers/notification.js","redux/reducers/todo.js","redux/reducers/index.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["supabase","createClient","process","showNotification","type","message","messageType","connect","isLogin","dispatch","history","useHistory","auth","session","push","submit","event","a","preventDefault","target","email","value","password","params","signIn","error","signUp","className","onSubmit","placeholder","name","to","todo","onSave","onDelete","useState","localTodo","saveLocalTodo","checked","is_completed","onChange","completed_date","parseInt","Date","now","style","id","visibility","task","onBlur","onClick","saveTodo","getState","user","created_date","from","insert","created_by_id","upsert","data","deleteTodo","delete","eq","getTodos","isCompleted","select","order","ascending","todos","props","completedTodos","pendingTodos","header","isFetched","setFetchStatus","useEffect","onSaveTodo","onDeleteTodo","map","signOut","notification","isEnable","setTimeout","initialState","deleteFromArray","arr","itemId","isExists","findIndex","splice","pushToArray","item","combineReducers","state","action","createStore","rootReducer","applyMiddleware","thunk","App","setSession","onAuthStateChange","PrivateRoute","Component","component","rest","render","Navigaion","store","exact","path","Home","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46158b2e.chunk.js","sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\n\nconst supabase = createClient(\n  process.env.REACT_APP_SUPERBASE_API_URL,\n  process.env.REACT_APP_SUPERBASE_SECERT_KEY\n);\n\nexport default supabase;\n","export const showNotification = (type, message) => ({\n  type: \"SHOW_NOTIFICATION\",\n  messageType: type,\n  message,\n});\n\nexport const hideNotification = () => ({\n  type: \"HIDE_NOTIFICATION\",\n});\n","import { Link, useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { showNotification } from \"../redux/actions/notification\";\n\nimport supabase from \"../server\";\n\nfunction Login({ isLogin, dispatch }) {\n  let history = useHistory();\n\n  if (supabase.auth.session()) history.push(\"/home\");\n\n  const submit = async (event) => {\n    event.preventDefault();\n    const {\n      email: { value: email },\n      password: { value: password },\n    } = event.target;\n\n    const params = {\n      email,\n      password,\n    };\n\n    if (isLogin) {\n      const { error } = await supabase.auth.signIn(params);\n      if (error) {\n        dispatch(showNotification(\"error\", error.message));\n      }\n      history.push(\"/home\");\n    } else {\n      const { error } = await supabase.auth.signUp(params);\n      if (error) dispatch(showNotification(\"error\", error.message));\n    }\n  };\n  return (\n    <div>\n      <div className=\"login\">\n        <form onSubmit={submit}>\n          <input\n            placeholder=\"Email\"\n            className={\"field\"}\n            name=\"email\"\n            type=\"text\"\n          />\n          <input\n            placeholder=\"Password\"\n            className={\"field\"}\n            name=\"password\"\n            type=\"password\"\n          />\n          <input type=\"submit\" value={isLogin ? \"Login\" : \"Sign Up\"} />\n          <div className=\"signup\">\n            <Link to={isLogin ? \"/signup\" : \"/login\"}>\n              {isLogin\n                ? \"do not have account? Signup here\"\n                : \"Already have account? Login here\"}\n            </Link>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default connect()(Login);\n","import { connect } from \"react-redux\";\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\nimport { useState } from \"react\";\n\nfunction TaskItem({ todo, onSave, onDelete }) {\n  const [localTodo, saveLocalTodo] = useState(todo);\n\n  const handleCheckBox = (event) => {\n    if (!localTodo.is_completed) {\n      localTodo.completed_date = parseInt(Date.now() / 1000);\n    }\n    onSave({ ...localTodo, is_completed: !localTodo.is_completed });\n  };\n\n  const handleTaskText = (event) => {\n    saveLocalTodo({ ...localTodo, task: event.target.value });\n  };\n\n  const handleSave = (event) => {\n    onSave({ ...localTodo });\n    if (!localTodo.id) saveLocalTodo({ ...localTodo, task: \"\" });\n  };\n\n  if (!localTodo) return <div></div>;\n  return (\n    <div className=\"task-item\">\n      <input\n        type=\"checkbox\"\n        checked={localTodo.is_completed}\n        onChange={handleCheckBox}\n        style={!localTodo.id ? { visibility: \"hidden\" } : {}}\n      />\n      <input\n        type=\"text\"\n        value={localTodo.task}\n        onChange={handleTaskText}\n        onBlur={handleSave}\n        placeholder={!localTodo.id ? \"+ Add New\" : \"\"}\n      />\n      <RiDeleteBin6Line\n        onClick={() => onDelete(localTodo)}\n        style={!localTodo.id && { visibility: \"hidden\" }}\n      />\n    </div>\n  );\n}\n\nexport default connect()(TaskItem);\n","import supabase from \"../../server\";\n\nimport { showNotification } from \"../actions/notification\";\n\nexport const saveTodo = (todo) => {\n  return async (dispatch, getState) => {\n    if (todo.task === \"\") return;\n    const user = supabase.auth.user();\n    if (!todo.id) todo.created_date = parseInt(Date.now() / 1000);\n    const { data, error } = await supabase\n      .from(\"to_do\")\n      .insert([{ ...todo, created_by_id: user.id }], { upsert: true });\n\n    if (error) dispatch(showNotification(\"error\", error.message));\n    dispatch({ type: \"SAVE_TODO\", todo: data[0] });\n  };\n};\n\nexport const deleteTodo = (todo) => {\n  return async (dispatch, getState) => {\n    const { error } = await supabase.from(\"to_do\").delete().eq(\"id\", todo.id);\n    if (error) dispatch(showNotification(\"error\", error.message));\n    dispatch(getTodos(todo.is_completed));\n  };\n};\n\nexport const getTodos = (isCompleted) => {\n  return async (dispatch, getState) => {\n    const user = supabase.auth.user();\n    const { data: todos, error } = await supabase\n      .from(\"to_do\")\n      .select(\"*\")\n      .eq(\"is_completed\", isCompleted)\n      .eq(\"created_by_id\", user.id)\n      .order(\"created_date\", { ascending: true });\n    if (error) dispatch(showNotification(\"error\", error.message));\n\n    dispatch({ type: \"SET_TODO\", todos, isCompleted });\n  };\n};\n","import { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport TaskItem from \"../components/TaskItem\";\nimport { getTodos, saveTodo, deleteTodo } from \"../redux/actions/todo\";\n\nfunction TaskList({ dispatch, header, isCompleted, todos = [] }) {\n  const [isFetched, setFetchStatus] = useState(false);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(async () => {\n    if (isFetched) return;\n    dispatch(getTodos(isCompleted));\n    setFetchStatus(true);\n  });\n\n  const onSaveTodo = async (todo) => {\n    if (todo.task === \"\") return;\n    if (!todo.id) todo.created_date = parseInt(Date.now() / 1000);\n    dispatch(saveTodo(todo));\n  };\n\n  const onDeleteTodo = async (todo) => {\n    dispatch(deleteTodo(todo));\n  };\n\n  return (\n    <div className=\"todo-pending\">\n      <div>\n        <h2>{header}</h2>\n        {todos.map((todo) => (\n          <TaskItem\n            key={todo.id}\n            todo={todo}\n            onSave={onSaveTodo}\n            onDelete={onDeleteTodo}\n          />\n        ))}\n        {!isCompleted && (\n          <TaskItem\n            todo={{ is_completed: false, task: \"\" }}\n            key={0}\n            onSave={onSaveTodo}\n            onDelete={onDeleteTodo}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({ todo }, props) => ({\n  todos: props.isCompleted ? todo.completedTodos : todo.pendingTodos,\n});\nexport default connect(mapStateToProps)(TaskList);\n","import { connect } from \"react-redux\";\nimport TaskList from \"../components/TaskList\";\n\nfunction Home() {\n  return (\n    <div>\n      <TaskList header=\"Pending Tasks\" isCompleted={false} />\n      <TaskList header=\"Completed Tasks\" isCompleted={true} />\n    </div>\n  );\n}\n\nexport default connect()(Home);\n","import { Link } from \"react-router-dom\";\nimport { FaPowerOff } from \"react-icons/fa\";\nimport supabase from \"../server\";\nimport { connect } from \"react-redux\";\nimport { showNotification } from \"../redux/actions/notification\";\n\nfunction Navigation({ dispatch }) {\n  const logoff = () => {\n    const { error } = supabase.auth.signOut();\n    if (error) dispatch(showNotification(\"error\", error.message));\n    else {\n      dispatch(showNotification(\"success\", \"Logged Out\"));\n    }\n  };\n\n  return (\n    <div className=\"nav\">\n      <div></div>\n      <div className=\"appname\">\n        <Link to=\"/home\">TODO List</Link>\n      </div>\n      <div className=\"action\">\n        <FaPowerOff onClick={logoff} />\n      </div>\n    </div>\n  );\n}\n\nexport default connect()(Navigation);\n","import { connect } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nimport { hideNotification } from \"../redux/actions/notification\";\n\nconst Notification = ({ isEnable, type, message, dispatch }) => {\n  useEffect(() => {\n    if (isEnable)\n      setTimeout(() => {\n        dispatch(hideNotification());\n      }, 1500);\n  }, [dispatch, isEnable]);\n\n  const className = isEnable\n    ? `notification ${type}-notification`\n    : `notification`;\n\n  return (\n    <div className={className}>\n      <p>{message}</p>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ notification }) => notification;\n\nexport default connect(mapStateToProps)(Notification);\n","const initialState = {\n  isEnable: true,\n  messageType: \"\",\n  message: \"\",\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case \"SHOW_NOTIFICATION\": {\n      return {\n        isEnable: true,\n        type: action.messageType,\n        message: action.message,\n      };\n    }\n    case \"HIDE_NOTIFICATION\": {\n      return {\n        ...state,\n        isEnable: false,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  pendingTodos: [],\n  completedTodos: [],\n};\n\nconst deleteFromArray = (arr, itemId) => {\n  const isExists = arr.findIndex((a) => a.id === itemId);\n  if (isExists > -1) {\n    arr.splice(isExists, 1);\n  }\n};\n\nconst pushToArray = (arr, item) => {\n  const isExists = arr.findIndex((a) => a.id === item.id);\n  if (isExists > -1) {\n    arr[isExists] = item;\n    return;\n  }\n  arr.push(item);\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case \"SAVE_TODO\": {\n      const { todo } = action;\n      pushToArray(\n        todo.is_completed ? state.completedTodos : state.pendingTodos,\n        todo\n      );\n      deleteFromArray(\n        todo.is_completed ? state.pendingTodos : state.completedTodos,\n        todo.id\n      );\n      return {\n        pendingTodos: [...state.pendingTodos],\n        completedTodos: [...state.completedTodos],\n      };\n    }\n    case \"DELETE_TODO\": {\n      const { todo } = action;\n      deleteFromArray(\n        todo.is_completed ? state.completedTodos : state.pendingTodos,\n        todo.id\n      );\n      return {\n        pendingTodos: [...state.pendingTodos],\n        completedTodos: [...state.completedTodos],\n      };\n    }\n    case \"SET_TODO\": {\n      const { todos, isCompleted } = action;\n      return {\n        ...state,\n        [isCompleted ? \"completedTodos\" : \"pendingTodos\"]: todos,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport notification from \"./notification\";\nimport todo from \"./todo\";\n\nexport default combineReducers({ todo, notification });\n","import { applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer, applyMiddleware(thunk));\n","import \"./App.css\";\nimport supabase from \"./server\";\nimport Login from \"./pages/Login\";\nimport Home from \"./pages/Home\";\nimport Navigaion from \"./components/Navigaion\";\nimport Notification from \"./components/Notification\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nfunction App() {\n  const [session, setSession] = useState(supabase.auth.session());\n\n  supabase.auth.onAuthStateChange((event, session) => {\n    setSession(session);\n  });\n\n  const PrivateRoute = ({ component: Component, ...rest }) => {\n    return (\n      // Show the component only when the user is logged in\n      // Otherwise, redirect the user to /signin page\n      <Route\n        {...rest}\n        render={(props) =>\n          session ? (\n            <div>\n              <Navigaion />\n              <Component {...props} />\n            </div>\n          ) : (\n            <Redirect to=\"/login\" />\n          )\n        }\n      />\n    );\n  };\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Notification />\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return session ? (\n                <Redirect to=\"/home\" />\n              ) : (\n                <Redirect to=\"/login\" />\n              );\n            }}\n          />\n          <Route exact path=\"/login\">\n            <Login isLogin={true} />\n          </Route>\n          <Route exact path=\"/signup\">\n            <Login isLogin={false} />\n          </Route>\n          <PrivateRoute exact path=\"/home\" component={Home} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}