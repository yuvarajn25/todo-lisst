{"version":3,"sources":["server.js","pages/Login.js","components/TaskItem.js","components/TaskList.js","pages/Home.js","components/Navigaion.js","components/notification.js","App.js","reportWebVitals.js","index.js"],"names":["console","log","SUPERBASE_API_URL","process","REACT_APP_NOT_SECRET_CODE","supabase","createClient","Login","isLogin","onNotification","history","useHistory","auth","session","push","submit","event","a","preventDefault","target","email","value","password","params","signIn","error","message","signUp","className","onSubmit","placeholder","name","type","to","TaskItem","props","useState","task","setTask","checked","is_completed","onChange","completed_date","parseInt","Date","now","onSave","style","id","visibility","onBlur","onClick","onDelete","TaskList","header","isCompleted","tasks","setTasks","useEffect","length","from","select","eq","order","data","localTasks","fetchData","saveTask","created_date","insert","upsert","deleteTask","taskId","delete","map","Home","Navigation","signOut","Notification","forwardRef","ref","setValue","setType","setMessage","showNotification","useImperativeHandle","setTimeout","App","setSession","useRef","current","onAuthStateChange","PrivateRoute","Component","component","rest","render","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"kPAEAA,QAAQC,IAAI,CACVC,kBAAmBC,2CACnBC,0BAA2BD,wJAE7B,IAKeE,EALEC,YACfH,2CACAA,uJ,8CCLa,SAASI,EAAT,GAA6C,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,eACnCC,EAAUC,cAEVN,EAASO,KAAKC,WAAWH,EAAQI,KAAK,SAE1C,IAAMC,EAAM,uCAAG,WAAOC,GAAP,6BAAAC,EAAA,yDACbD,EAAME,iBADO,EAKTF,EAAMG,OAFQC,EAHL,EAGXA,MAASC,MACUC,EAJR,EAIXA,SAAYD,MAGRE,EAAS,CACbH,QACAE,aAGEd,EAZS,iCAaaH,EAASO,KAAKY,OAAOD,GAblC,iBAaHE,EAbG,EAaHA,QAENhB,EAAe,QAASgB,EAAMC,SAEhChB,EAAQI,KAAK,SAjBF,yCAmBaT,EAASO,KAAKe,OAAOJ,GAnBlC,kBAmBHE,EAnBG,EAmBHA,QACGhB,EAAe,QAASgB,EAAMC,SApB9B,4CAAH,sDAuBZ,OACE,8BACE,qBAAKE,UAAU,QAAf,SACE,uBAAMC,SAAUd,EAAhB,UACE,uBACEe,YAAY,QACZF,UAAW,QACXG,KAAK,QACLC,KAAK,SAEP,uBACEF,YAAY,WACZF,UAAW,QACXG,KAAK,WACLC,KAAK,aAEP,uBAAOA,KAAK,SAASX,MAAOb,EAAU,QAAU,YAChD,qBAAKoB,UAAU,SAAf,SACE,cAAC,IAAD,CAAMK,GAAIzB,EAAU,UAAY,SAAhC,SACGA,EACG,mCACA,8C,YChDH,SAAS0B,EAASC,GAAQ,IAAD,EACdC,mBAASD,EAAME,MADD,mBAC/BA,EAD+B,KACzBC,EADyB,KActC,OAAKD,EAEH,sBAAKT,UAAU,YAAf,UACE,uBACEI,KAAK,WACLO,QAASF,EAAKG,aACdC,SAjBiB,SAACzB,GACjBqB,EAAKG,eACRH,EAAKK,eAAiBC,SAASC,KAAKC,MAAQ,MAE9CV,EAAMW,OAAN,2BAAkBT,GAAlB,IAAwBG,cAAeH,EAAKG,iBAcxCO,MAAQV,EAAKW,GAAgC,GAA3B,CAAEC,WAAY,YAElC,uBACEjB,KAAK,OACLX,MAAOgB,EAAKA,KACZI,SAhBiB,SAACzB,GACtBsB,EAAQ,2BAAKD,GAAN,IAAYA,KAAMrB,EAAMG,OAAOE,UAgBlC6B,OAAQ,kBAAMf,EAAMW,OAAOT,IAC3BP,YAAcO,EAAKW,GAAmB,GAAd,cAE1B,cAAC,IAAD,CACEG,QAAS,kBAAMhB,EAAMiB,SAASf,EAAKW,KACnCD,OAAQV,EAAKW,IAAM,CAAEC,WAAY,eAlBrB,wBCdL,SAASI,EAAT,GAA4D,IAAD,OAAvC5C,EAAuC,EAAvCA,eAAgB6C,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,YAAe,EAC9CnB,mBAAS,IADqC,mBACjEoB,EADiE,KAC1DC,EAD0D,KAIxEC,oBAAS,sBAAC,sBAAAzC,EAAA,0DACJuC,EAAMG,OADF,iFAAA1C,EAAA,MAEU,kCAAAA,EAAA,sEACYZ,EACzBuD,KAAK,SACLC,OAAO,KACPC,GAAG,eAAgBP,GACnBQ,MAAM,gBALO,mBACVC,EADU,EACVA,OAAMvC,EADI,EACJA,OADI,uBAOdhB,EAAe,QAASgB,EAAMC,SAPhB,0BAUVuC,EAAaD,GAClBT,GACCU,EAAWnD,KAAK,CACd0B,cAAc,EACdH,KAAM,KAEVoB,EAASQ,GAhBO,4CAFV,qDAqBRC,GArBQ,2CAsBP,CAACV,IAEJ,IAAMW,EAAQ,uCAAG,WAAO9B,GAAP,iBAAApB,EAAA,yDACG,KAAdoB,EAAKA,KADM,wDAEVA,EAAKW,KAAIX,EAAK+B,aAAezB,SAASC,KAAKC,MAAQ,MAFzC,SAGexC,EAC3BuD,KAAK,SACLS,OAAO,CAAChC,GAAO,CAAEiC,QAAQ,IALb,kBAGPN,MAAMvC,EAHC,EAGDA,QAIH,EAAKU,MAAM1B,eAAe,QAASgB,EAAMC,SACpD+B,EAAS,IARM,4CAAH,sDAWRc,EAAU,uCAAG,WAAOC,GAAP,iBAAAvD,EAAA,sEACaZ,EAC3BuD,KAAK,SACLa,SACAX,GAAG,KAAMU,GAJK,kBACTR,MAAMvC,EADG,EACHA,QAIH,EAAKU,MAAM1B,eAAe,QAASgB,EAAMC,SACpD+B,EAAS,IANQ,2CAAH,sDAShB,OACE,qBAAK7B,UAAU,eAAf,SACE,gCACE,6BAAK0B,IACJE,EAAMkB,KAAI,SAACrC,GAAD,OACT,cAACH,EAAD,CAAUG,KAAMA,EAAMS,OAAQqB,EAAUf,SAAUmB,YCtD7C,SAASI,EAAT,GAAkC,EAAlBlE,eAC7B,OACE,gCACE,cAAC4C,EAAD,CAAUC,OAAO,gBAAgBC,aAAa,IAC9C,cAACF,EAAD,CAAUC,OAAO,kBAAkBC,aAAa,O,YCHvC,SAASqB,EAAT,GAAyC,IAAnBnE,EAAkB,EAAlBA,eASnC,OACE,sBAAKmB,UAAU,MAAf,UACE,yCACA,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,CAAMK,GAAG,QAAT,yBAEF,qBAAKL,UAAU,SAAf,SACE,cAAC,IAAD,CAAYuB,QAfH,WAAO,IACZ1B,EAAUpB,EAASO,KAAKiE,UAAxBpD,MACJA,EAAOhB,EAAe,QAASgB,EAAMC,SAEvCjB,EAAe,UAAW,sBCPhC,IAsCeqE,EAtCMC,sBAAW,SAAC5C,EAAO6C,GAAS,IAAD,EACpB5C,oBAAS,GADW,mBACvCf,EADuC,KAChC4D,EADgC,OAEtB7C,mBAAS,MAFa,mBAEvCJ,EAFuC,KAEjCkD,EAFiC,OAGhB9C,mBAAS,MAHO,mBAGvCV,EAHuC,KAG9ByD,EAH8B,KAKxCC,EAAmB,SAACpD,EAAMN,GAC9BuD,GAAS,GACTC,EAAQlD,GACRmD,EAAWzD,IAMb2D,8BAAoBL,GAAK,WACvB,MAAO,CACLI,uBAIJ1B,qBAAU,WACJrC,GACFiE,YAAW,WAXbL,GAAS,KAaJ,QACJ,CAAC5D,IAEJ,IAAMO,EAAYP,EAAK,uBACHW,EADG,gCAIvB,OACE,qBAAKJ,UAAWA,EAAhB,SACE,4BAAIF,SC8CK6D,MAnEf,WAAgB,IAAD,EACiBnD,mBAAS/B,EAASO,KAAKC,WADxC,mBACNA,EADM,KACG2E,EADH,KAEPR,EAAMS,iBAAO,MAEbL,EAAmB,SAACpD,EAAMN,GAC9BsD,EAAIU,QAAQN,iBAAiBpD,EAAMN,IAGrCrB,EAASO,KAAK+E,mBAAkB,SAAC3E,EAAOH,GACtC2E,EAAW3E,MAGbb,QAAQC,IAAI,CAAEY,YAEd,IAAM+E,EAAe,SAAC,GAAuC,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,6BAC1D,OAGE,aAFA,CAEC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAC7D,GAAD,OACNtB,EACE,gCACE,cAAC,EAAD,CAAWJ,eAAgB2E,IAC3B,cAACS,EAAD,eAAe1D,OAGjB,cAAC,IAAD,CAAUF,GAAG,gBAOvB,OACE,8BACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAc+C,IAAKA,IACnB,eAAC,IAAD,WACE,cAAC,IAAD,CACEiB,OAAK,EACLC,KAAK,IACLF,OAAQ,WACN,OAAOnF,EACL,cAAC,IAAD,CAAUoB,GAAG,UAEb,cAAC,IAAD,CAAUA,GAAG,cAInB,cAAC,IAAD,CAAOgE,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC3F,EAAD,CAAOC,SAAS,EAAMC,eAAgB2E,MAExC,cAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC3F,EAAD,CAAOC,SAAS,EAAOC,eAAgB2E,MAEzC,cAACQ,EAAD,CACEK,OAAK,EACLC,KAAK,QACLJ,UAAW,kBAAM,cAACnB,EAAD,CAAMlE,eAAgB2E,gBC7DpCe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASZ,OACP,cAAC,IAAMa,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.98ec3cec.chunk.js","sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\n\nconsole.log({\n  SUPERBASE_API_URL: process.env.REACT_APP_SUPERBASE_API_URL,\n  REACT_APP_NOT_SECRET_CODE: process.env.REACT_APP_SUPERBASE_SECERT_KEY,\n});\nconst supabase = createClient(\n  process.env.REACT_APP_SUPERBASE_API_URL,\n  process.env.REACT_APP_SUPERBASE_SECERT_KEY\n);\n\nexport default supabase;\n","import { Link, useHistory } from \"react-router-dom\";\nimport supabase from \"../server\";\n\nexport default function Login({ isLogin, onNotification }) {\n  let history = useHistory();\n\n  if (supabase.auth.session()) history.push(\"/home\");\n\n  const submit = async (event) => {\n    event.preventDefault();\n    const {\n      email: { value: email },\n      password: { value: password },\n    } = event.target;\n\n    const params = {\n      email,\n      password,\n    };\n\n    if (isLogin) {\n      const { error } = await supabase.auth.signIn(params);\n      if (error) {\n        onNotification(\"error\", error.message);\n      }\n      history.push(\"/home\");\n    } else {\n      const { error } = await supabase.auth.signUp(params);\n      if (error) onNotification(\"error\", error.message);\n    }\n  };\n  return (\n    <div>\n      <div className=\"login\">\n        <form onSubmit={submit}>\n          <input\n            placeholder=\"Email\"\n            className={\"field\"}\n            name=\"email\"\n            type=\"text\"\n          />\n          <input\n            placeholder=\"Password\"\n            className={\"field\"}\n            name=\"password\"\n            type=\"password\"\n          />\n          <input type=\"submit\" value={isLogin ? \"Login\" : \"Sign Up\"} />\n          <div className=\"signup\">\n            <Link to={isLogin ? \"/signup\" : \"/login\"}>\n              {isLogin\n                ? \"do not have account? Signup here\"\n                : \"Already have account? Login here\"}\n            </Link>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import supabase from \"../server\";\nimport { useState } from \"react\";\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\n\nexport default function TaskItem(props) {\n  const [task, setTask] = useState(props.task);\n\n  const handleCheckBox = (event) => {\n    if (!task.is_completed) {\n      task.completed_date = parseInt(Date.now() / 1000);\n    }\n    props.onSave({ ...task, is_completed: !task.is_completed });\n  };\n\n  const handleTaskText = (event) => {\n    setTask({ ...task, task: event.target.value });\n  };\n\n  if (!task) return <div></div>;\n  return (\n    <div className=\"task-item\">\n      <input\n        type=\"checkbox\"\n        checked={task.is_completed}\n        onChange={handleCheckBox}\n        style={!task.id ? { visibility: \"hidden\" } : {}}\n      />\n      <input\n        type=\"text\"\n        value={task.task}\n        onChange={handleTaskText}\n        onBlur={() => props.onSave(task)}\n        placeholder={!task.id ? \"+ Add New\" : \"\"}\n      />\n      <RiDeleteBin6Line\n        onClick={() => props.onDelete(task.id)}\n        style={!task.id && { visibility: \"hidden\" }}\n      />\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport TaskItem from \"../components/TaskItem\";\nimport supabase from \"../server\";\n\nexport default function TaskList({ onNotification, header, isCompleted }) {\n  const [tasks, setTasks] = useState([]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(async () => {\n    if (tasks.length) return;\n    const fetchData = async () => {\n      let { data, error } = await supabase\n        .from(\"to_do\")\n        .select(\"*\")\n        .eq(\"is_completed\", isCompleted)\n        .order(\"created_date\");\n      if (error) {\n        onNotification(\"error\", error.message);\n        return;\n      }\n      const localTasks = data;\n      !isCompleted &&\n        localTasks.push({\n          is_completed: false,\n          task: \"\",\n        });\n      setTasks(localTasks);\n    };\n\n    fetchData();\n  }, [tasks]);\n\n  const saveTask = async (task) => {\n    if (task.task === \"\") return;\n    if (!task.id) task.created_date = parseInt(Date.now() / 1000);\n    const { data, error } = await supabase\n      .from(\"to_do\")\n      .insert([task], { upsert: true });\n\n    if (error) this.props.onNotification(\"error\", error.message);\n    setTasks([]);\n  };\n\n  const deleteTask = async (taskId) => {\n    const { data, error } = await supabase\n      .from(\"to_do\")\n      .delete()\n      .eq(\"id\", taskId);\n    if (error) this.props.onNotification(\"error\", error.message);\n    setTasks([]);\n  };\n\n  return (\n    <div className=\"todo-pending\">\n      <div>\n        <h2>{header}</h2>\n        {tasks.map((task) => (\n          <TaskItem task={task} onSave={saveTask} onDelete={deleteTask} />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport TaskList from \"../components/TaskList\";\n\nexport default function Home({ onNotification }) {\n  return (\n    <div>\n      <TaskList header=\"Pending Tasks\" isCompleted={false} />\n      <TaskList header=\"Completed Tasks\" isCompleted={true} />\n    </div>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport { FaPowerOff } from \"react-icons/fa\";\nimport supabase from \"../server\";\n\nexport default function Navigation({ onNotification }) {\n  const logoff = () => {\n    const { error } = supabase.auth.signOut();\n    if (error) onNotification(\"error\", error.message);\n    else {\n      onNotification(\"success\", \"Logged Out\");\n    }\n  };\n\n  return (\n    <div className=\"nav\">\n      <div>asdsad</div>\n      <div className=\"appname\">\n        <Link to=\"/home\">TODO List</Link>\n      </div>\n      <div className=\"action\">\n        <FaPowerOff onClick={logoff} />\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useState, forwardRef, useImperativeHandle } from \"react\";\n\nconst Notification = forwardRef((props, ref) => {\n  const [value, setValue] = useState(false);\n  const [type, setType] = useState(null);\n  const [message, setMessage] = useState(null);\n\n  const showNotification = (type, message) => {\n    setValue(true);\n    setType(type);\n    setMessage(message);\n  };\n  const hideNotification = () => {\n    setValue(false);\n  };\n\n  useImperativeHandle(ref, () => {\n    return {\n      showNotification,\n    };\n  });\n\n  useEffect(() => {\n    if (value)\n      setTimeout(() => {\n        hideNotification(null);\n      }, 1500);\n  }, [value]);\n\n  const className = value\n    ? `notification ${type}-notification`\n    : `notification`;\n\n  return (\n    <div className={className}>\n      <p>{message}</p>\n    </div>\n  );\n});\n\nexport default Notification;\n","import \"./App.css\";\nimport supabase from \"./server\";\nimport Login from \"./pages/Login\";\nimport Home from \"./pages/Home\";\nimport Navigaion from \"./components/Navigaion\";\nimport Notification from \"./components/notification\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { useState, useRef } from \"react\";\n\nfunction App() {\n  const [session, setSession] = useState(supabase.auth.session());\n  const ref = useRef(null);\n\n  const showNotification = (type, message) => {\n    ref.current.showNotification(type, message);\n  };\n\n  supabase.auth.onAuthStateChange((event, session) => {\n    setSession(session);\n  });\n\n  console.log({ session });\n\n  const PrivateRoute = ({ component: Component, ...rest }) => {\n    return (\n      // Show the component only when the user is logged in\n      // Otherwise, redirect the user to /signin page\n      <Route\n        {...rest}\n        render={(props) =>\n          session ? (\n            <div>\n              <Navigaion onNotification={showNotification} />\n              <Component {...props} />\n            </div>\n          ) : (\n            <Redirect to=\"/login\" />\n          )\n        }\n      />\n    );\n  };\n\n  return (\n    <div>\n      <Router>\n        <Notification ref={ref} />\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return session ? (\n                <Redirect to=\"/home\" />\n              ) : (\n                <Redirect to=\"/login\" />\n              );\n            }}\n          />\n          <Route exact path=\"/login\">\n            <Login isLogin={true} onNotification={showNotification} />\n          </Route>\n          <Route exact path=\"/signup\">\n            <Login isLogin={false} onNotification={showNotification} />\n          </Route>\n          <PrivateRoute\n            exact\n            path=\"/home\"\n            component={() => <Home onNotification={showNotification} />}\n          />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}